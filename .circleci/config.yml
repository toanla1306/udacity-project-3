version: 2.1

orbs:
  slack: circleci/slack@4.1

jobs:
  # ----build frontend-----
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            # code here
            cd frontend
            npm install 
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
  
  # -----build backend------
  build-backend:
    docker:
      - image: circleci/node:13.8.0
      - image: cimg/postgres:14.0
        environment: 
          POSTGRES_USER: postgres
          POSTGRES_DB: glee
          POSTGRES_PASSWORD: password
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - setup_remote_docker: 
          version: 20.10.14
      - run:
          name: Build back-end
          command: |
            # code here
            echo $TYPEORM_ENTITIES
            cd backend
            npm install
            npm run start& 
      - save_cache:
          paths: [backend/node_modules]
          key: backend-build

  # -----test frontend----
  test-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Run frontend test 
          command: |
            cd frontend
            npm install
            npm run test
  # -----test backend-----
  test-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Run backend test 
          command: |
            cd backend
            npm install
            npm run test
      # - slack/notify:
      #     event: fail
      #     template: basic_fail_1

  # -----scan-frontend-----
  scan-frontend:
    docker: 
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run: 
          name: Scan frontend dependencies
          command: |
            cd frontend
            npm install
            npm audit --audit-level=critical
  
  # ----scan-backend-----
  scan-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout 
      - restore_cache:
          keys: [backend-build]
      - run:
          name: Scan backend dependencies
          command: |
            cd backend
            npm install
            npm audit --audit-level=critical

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - "build-frontend"
      - test-backend:
          requires:
            - "build-backend"
      - scan-frontend:
          requires:
            - "build-frontend"
      - scan-backend:
          requires:
            - "build-backend"